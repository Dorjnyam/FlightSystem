@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace FlightSystem.InfoDisplay.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="mn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Нислэгийн мэдээллийн дэлгэц</title>
    <base href="~/" />
    <link rel="icon" href="favicon.ico" type="image/x-icon" />
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    
    <!-- Custom CSS -->
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }

        #blazor-error-ui {
            background: lightyellow;
            bottom: 0;
            box-shadow: 0 -1px 2px rgba(0, 0, 0, 0.2);
            display: none;
            left: 0;
            padding: 0.6rem 1.25rem 0.7rem 1.25rem;
            position: fixed;
            width: 100%;
            z-index: 1000;
            border-top: 2px solid #f0ad4e;
        }

        #blazor-error-ui .dismiss {
            cursor: pointer;
            position: absolute;
            right: 0.75rem;
            top: 0.5rem;
        }

        .loading-page {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            color: white;
            text-align: center;
        }

        .loading-spinner {
            width: 80px;
            height: 80px;
            border: 8px solid rgba(255, 255, 255, 0.3);
            border-top: 8px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 30px;
        }

        .loading-text {
            font-size: 1.5rem;
            margin-bottom: 10px;
        }

        .loading-subtitle {
            font-size: 1rem;
            opacity: 0.8;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Scroll bar стиль */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.1);
        }

        ::-webkit-scrollbar-thumb {
            background: rgba(255, 255, 255, 0.3);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: rgba(255, 255, 255, 0.5);
        }
    </style>
    
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <!-- Loading дэлгэц -->
    <div id="loading-screen" class="loading-page">
        <div class="loading-spinner"></div>
        <div class="loading-text">🛫 Нислэгийн систем</div>
        <div class="loading-subtitle">Мэдээлэл ачаалж байна...</div>
    </div>

    <!-- Алдааны дэлгэц -->
    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            Алдаа гарлаа. Хуудсыг дахин ачаална уу.
        </environment>
        <environment include="Development">
            Системийн алдаа гарлаа. Дэлгэрэнгүй мэдээллийг консолоос харна уу.
        </environment>
        <a href="" class="reload">🔄 Дахин ачаалах</a>
        <a class="dismiss">❌</a>
    </div>

    <!-- Scripts -->
    <script src="_framework/blazor.server.js"></script>
    <script>
        // Blazor эхлэх үед loading дэлгэцийг нуух
        window.addEventListener('DOMContentLoaded', function () {
            // 2 секундийн дараа loading дэлгэцийг нуух
            setTimeout(function () {
                const loadingScreen = document.getElementById('loading-screen');
                if (loadingScreen) {
                    loadingScreen.style.transition = 'opacity 0.5s ease-out';
                    loadingScreen.style.opacity = '0';
                    setTimeout(() => loadingScreen.remove(), 500);
                }
            }, 2000);
        });

        // SignalR холболтын төлөв харуулах
        window.updateConnectionStatus = function (isConnected) {
            console.log(`SignalR холболт: ${isConnected ? 'Холбогдсон' : 'Холбоогүй'}`);
        };

        // Консол лог
        window.logMessage = function (message) {
            console.log(`[${new Date().toLocaleTimeString('mn-MN')}] ${message}`);
        };

        // Дэлгэцийг бүтэн хэмжээнд харуулах
        window.enterFullscreen = function () {
            const elem = document.documentElement;
            if (elem.requestFullscreen) {
                elem.requestFullscreen();
            } else if (elem.mozRequestFullScreen) {
                elem.mozRequestFullScreen();
            } else if (elem.webkitRequestFullscreen) {
                elem.webkitRequestFullscreen();
            } else if (elem.msRequestFullscreen) {
                elem.msRequestFullscreen();
            }
        };

        // Бүтэн дэлгэцээс гарах
        window.exitFullscreen = function () {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            } else if (document.mozCancelFullScreen) {
                document.mozCancelFullScreen();
            } else if (document.webkitExitFullscreen) {
                document.webkitExitFullscreen();
            } else if (document.msExitFullscreen) {
                document.msExitFullscreen();
            }
        };

        // Дэлгэцийг автоматаар шинэчлэх (5 минут тутам)
        setInterval(function() {
            if (document.hidden) return; // Хуудас харагдахгүй байгаа бол шинэчлэхгүй
            
            // Blazor-д шинэчлэх дохио илгээх
            if (window.DotNet) {
                window.DotNet.invokeMethodAsync('FlightSystem.InfoDisplay', 'RefreshData');
            }
        }, 300000); // 5 минут

        // Дуу хөгжмийн дохио (шинэ мэдэгдэлд)
        window.playNotificationSound = function() {
            // Энгийн дуу үүсгэх
            const audioContext = new (window.AudioContext || window.webkitAudioContext)();
            const oscillator = audioContext.createOscillator();
            const gainNode = audioContext.createGain();
            
            oscillator.connect(gainNode);
            gainNode.connect(audioContext.destination);
            
            oscillator.frequency.setValueAtTime(800, audioContext.currentTime);
            oscillator.frequency.exponentialRampToValueAtTime(200, audioContext.currentTime + 0.5);
            
            gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
            gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);
            
            oscillator.start(audioContext.currentTime);
            oscillator.stop(audioContext.currentTime + 0.5);
        };
    </script>
</body>
</html>
